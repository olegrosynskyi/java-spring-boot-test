project.ext.set("libraries", "")

/**
 * If dependency does not have version specified this means it managed by spring boot dependency management
 * Once you will upgrade spring boot version all those dependencies will be updated accordingly
 */

ext.cucumber_version = "7.6.0"
ext.common_platform_version = "6.0.450"

project.libraries = [
        spring_boot_starter_jdbc     : 'org.springframework.boot:spring-boot-starter-jdbc',
        spring_boot_starter_web      : 'org.springframework.boot:spring-boot-starter-web',
        spring_boot_starter_jooq     : 'org.springframework.boot:spring-boot-starter-jooq',
        spring_boot_starter_thymeleaf: 'org.springframework.boot:spring-boot-starter-thymeleaf',
        spring_boot_starter_security : 'org.springframework.boot:spring-boot-starter-security',
        spring_boot_starter_actuator : 'org.springframework.boot:spring-boot-starter-actuator',
        spring_boot_starter_redis    : 'org.springframework.boot:spring-boot-starter-data-redis',
        spring_boot_devtools         : 'org.springframework.boot:spring-boot-devtools',
        spring_boot_starter_test     : 'org.springframework.boot:spring-boot-starter-test',
        spring_boot_security_test    : 'org.springframework.security:spring-security-test',
        spring_aspects               : 'org.springframework:spring-aspects',
        configuration_processor      : 'org.springframework.boot:spring-boot-configuration-processor',
        liquibase                    : 'org.liquibase:liquibase-core',
        mysql_connector_java         : 'mysql:mysql-connector-java',
        awsProvider                  : dependencies.create("com.kenshoo:aws-credentials-provider:${common_platform_version}") {
            exclude group: 'org.apache.commons', module: 'commons-lang'
        },
        commons_pool2                : 'org.apache.commons:commons-pool2',
        micrometer_registry_statsd   : 'io.micrometer:micrometer-registry-statsd',
        datadog_utils                : "com.kenshoo:datadog-utils:${common_platform_version}",
        kjobster                     : 'com.kenshoo:kjobster:1.1.107',
        dropwizard_metrics_core      : 'io.dropwizard.metrics:metrics-core',
        cucumber_java                : "io.cucumber:cucumber-java:${cucumber_version}",
        cucumber_junit_platform      : "io.cucumber:cucumber-junit-platform-engine:${cucumber_version}",
        junit_platform_suite         : 'org.junit.platform:junit-platform-suite',
        cucumber_spring              : "io.cucumber:cucumber-spring:${cucumber_version}",
        wiremock                     : 'com.github.tomakehurst:wiremock:2.27.2',
        karate_junit5                : 'com.intuit.karate:karate-junit5:1.2.0',
        awaitility                   : 'org.awaitility:awaitility',
        cucumber_reporting           : 'net.masterthought:cucumber-reporting:5.7.1',
        bootstrap_webjars            : 'org.webjars:bootstrap:5.1.3',
        swagger                      : 'org.springdoc:springdoc-openapi-ui:1.6.8',
        kenshoo_auth                 : dependencies.create('com.kenshoo.ls:kenshoo-auth:50.152') {
            exclude group: 'io.dropwizard', module: 'dropwizard-auth'
            exclude group: 'org.json', module: 'json'
        },
        logback_encoder              : 'net.logstash.logback:logstash-logback-encoder:7.1.1',
        jaxb                         : 'javax.xml.bind:jaxb-api:2.3.1',
        commons_lang3                : 'org.apache.commons:commons-lang3',
        guava                        : 'com.google.guava:guava:31.1-jre',
        lombok                       : 'org.projectlombok:lombok',
]
